# Behavior Tree
bt_navigator:
  ros__parameters:
    use_sim_time: True
    global_frame: map
    robot_base_frame: base_footprint
    odom_topic: /odometry/global
    bt_loop_duration: 10
    default_server_timeout: 20
    default_nav_to_pose_bt_xml: "nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml"
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_compute_path_through_poses_action_bt_node
    - nav2_smooth_path_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_assisted_teleop_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_drive_on_heading_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_globally_updated_goal_condition_bt_node
    - nav2_is_path_valid_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_truncate_path_local_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_path_expiring_timer_condition
    - nav2_distance_traveled_condition_bt_node
    - nav2_single_trigger_bt_node
    - nav2_goal_updated_controller_bt_node
    - nav2_is_battery_low_condition_bt_node
    - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    - nav2_remove_passed_goals_action_bt_node
    - nav2_planner_selector_bt_node
    - nav2_controller_selector_bt_node
    - nav2_goal_checker_selector_bt_node
    - nav2_controller_cancel_bt_node
    - nav2_path_longer_on_approach_bt_node
    - nav2_wait_cancel_bt_node
    - nav2_spin_cancel_bt_node
    - nav2_back_up_cancel_bt_node
    - nav2_assisted_teleop_cancel_bt_node
    - nav2_drive_on_heading_cancel_bt_node
    - nav2_is_battery_charging_condition_bt_node
    - super_wait_bt_node
    - path_blackboard_bt_node
    # - change_waypoints_bt_node
    - is_path_outdated_bt_node
    - get_path_service_bt_node
    - rate_pipeline_sequence_bt_node
    - load_control_point_bt_node
    - compute_maneuver_path_bt_node
    - do_while_in_parcel_bt_node
    - set_navigation_poses_bt_node
    - set_maneuver_params_bt_node
    - extend_aligned_path_bt_node
    - call_empty_srv_bt_node
    - define_parcel_bt_node
    - get_alignment_pose_bt_node
    - get_maneuver_origin_bt_node
    - append_paths_bt_node

bt_navigator_navigate_through_poses_rclcpp_node:
  ros__parameters:
    use_sim_time: True

bt_navigator_navigate_to_pose_rclcpp_node:
  ros__parameters:
    use_sim_time: True

# Global Planner
planner_server:
 ros__parameters:
   expected_planner_frequency: 1.0
   use_sim_time: True
   planner_plugins: ['GridBased', 'WaypointBased', 'SmacHybrid', 'Lattice']
   GridBased:
      # Review params!
      plugin: 'nav2_navfn_planner/NavfnPlanner'
      tolerance: 0.5
      use_astar: false
   WaypointBased:
      plugin: "eut_fixed_gplanner/EutFixedGplanner"
      path_filename: "waypoints.csv"
      frame_id: map
      interpolation_dist: 0.2
      use_orientation: true
   SmacHybrid:
      plugin: "nav2_smac_planner/SmacPlannerHybrid"
      downsample_costmap: false           # whether or not to downsample the map
      downsampling_factor: 1              # multiplier for the resolution of the costmap layer (e.g. 2 on a 5cm costmap would be 10cm)
      tolerance: 0.25                     # dist-to-goal heuristic cost (distance) for valid tolerance endpoints if exact goal cannot be found.
      allow_unknown: true                 # allow traveling in unknown space
      max_iterations: -1                  # maximum total iterations to search for before failing (in case unreachable), set to -1 to disable
      max_on_approach_iterations: 1000    # Maximum number of iterations after within tolerances to continue to try to find exact solution
      max_planning_time: 10.0              # max time in s for planner to plan, smooth
      motion_model_for_search: "DUBIN"    # Hybrid-A* Dubin, Redds-Shepp
      angle_quantization_bins: 72         # Number of angle bins for search
      analytic_expansion_ratio: 5.0       # The ratio to attempt analytic expansions during search for final approach.
      analytic_expansion_max_length: 3.0  # For Hybrid/Lattice nodes: The maximum length of the analytic expansion to be considered valid to prevent unsafe shortcutting
      analytic_expansion_max_cost: 200.0  # The maximum single cost for any part of an analytic expansion to contain and be valid, except when necessary on approach to goal
      analytic_expansion_max_cost_override: false  #  Whether or not to override the maximum cost setting if within critical distance to goal (ie probably required)
      minimum_turning_radius: 1.5         # minimum turning radius in m of path / vehicle
      reverse_penalty: 1.0               # Penalty to apply if motion is reversing, must be => 1
      change_penalty: 0.0                 # Penalty to apply if motion is changing directions (L to R), must be >= 0
      non_straight_penalty: 1.0           # Penalty to apply if motion is non-straight, must be => 1
      cost_penalty: 1.3                   # Penalty to apply to higher cost areas when adding into the obstacle map dynamic programming distance expansion heuristic. This drives the robot more towards the center of passages. A value between 1.3 - 3.5 is reasonable.
      retrospective_penalty: 0.015
      lookup_table_size: 100.0             # Size of the dubin/reeds-sheep distance window to cache, in meters.
      cache_obstacle_heuristic: false     # Cache the obstacle map dynamic programming distance expansion heuristic between subsiquent replannings of the same goal location. Dramatically speeds up replanning performance (40x) if costmap is largely static.
      debug_visualizations: true         # For Hybrid nodes: Whether to publish expansions on the /expansions topic as an array of poses (the orientation has no meaning) and the path's footprints on the /planned_footprints topic. WARNING: heavy to compute and to display, for debug only as it degrades the performance.
      use_quadratic_cost_penalty: False
      downsample_obstacle_heuristic: True
      allow_primitive_interpolation: False
      smooth_path: True                   # If true, does a simple and quick smoothing post-processing to the path
      smoother:
        max_iterations: 1000
        w_smooth: 0.3
        w_data: 0.2
        tolerance: 1.0e-10
        do_refinement: true
        refinement_num: 2
   Lattice:
      plugin: "nav2_smac_planner/SmacPlannerLattice"
      allow_unknown: true
      tolerance: 0.25
      max_iterations: 1000000
      max_on_approach_iterations: 1000
      max_planning_time: 5.0
      analytic_expansion_ratio: 3.5
      analytic_expansion_max_length: 3.0
      analytic_expansion_max_cost: 200.0
      analytic_expansion_max_cost_override: false
      reverse_penalty: 2.0
      change_penalty: 0.05
      non_straight_penalty: 1.05
      cost_penalty: 2.0
      rotation_penalty: 5.0
      retrospective_penalty: 0.015
      # lattice_filepath: ""
      lookup_table_size: 20.0
      cache_obstacle_heuristic: false
      allow_reverse_expansion: false
      smooth_path: True
      smoother:
        max_iterations: 1000
        w_smooth: 0.3
        w_data: 0.2
        tolerance: 1.0e-10
        do_refinement: true
        refinement_num: 2

# Controller
controller_server:
  ros__parameters:
    use_sim_time: True
    controller_frequency: 10.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    odom_topic: /odometry/global
    failure_tolerance: 0.0 # disabled, default is 0.3
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["goal_checker"]
    controller_plugins: ['GlobalPurePursuit', 'ReactivePurePursuit', 'RegulatedPurePursuit', 'VectorPursuit']

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 300.0
    # Goal checker parameters
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.1
      yaw_goal_tolerance: 0.5
      stateful: False
    # EUT Pure Pursuit (reactive and global)
    ReactivePurePursuit:
      plugin: "pure_pursuit_controller/PurePursuit"
      robot_base_frame: base_footprint
      global_frame: odom
      transform_tolerance: 0.5
      max_vel_lin: 0.6
      max_vel_th: 0.7
      min_vel_lin: 0.0
      min_vel_th: 0.0
      lookahead_distance: 3.0
      theta_max: 1.0
      theta_min: 0.08
      min_radius: 0.5 # R = L/tan(theta_max)
      k_rho: 0.5
      use_interpolation: true
      prune_plan: true
      prune_distance: 3.0
      backwards_mode: false
      use_recommended_vel: true
      recommended_vel_topic: "r4c_tractor/mw/vel_recommendation"
    GlobalPurePursuit:
      plugin: "pure_pursuit_controller/PurePursuit"
      robot_base_frame: base_footprint
      global_frame: map
      transform_tolerance: 0.5
      max_vel_lin: 0.3
      max_vel_th: 3.0
      min_vel_lin: 0.0
      min_vel_th: 0.0
      lookahead_distance: 4.5
      theta_max: 1.0
      theta_min: 0.01
      min_radius: 0.01 # R = L/tan(theta_max)
      k_rho: 0.5
      use_interpolation: true
      prune_plan: true
      prune_distance: 2.0
      backwards_mode: false
      use_recommended_vel: false
      recommended_vel_topic: "r4c_tractor/mw/vel_recommendation"
    # Nav2 Pure Pursuit
    RegulatedPurePursuit:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      desired_linear_vel: 0.3
      robot_base_frame: base_footprint
      global_frame: map
      lookahead_dist: 3.0
      min_lookahead_dist: 3.0
      max_lookahead_dist: 5.0
      lookahead_time: 1.5
      rotate_to_heading_angular_vel: 1.0
      transform_tolerance: 0.5
      use_velocity_scaled_lookahead_dist: true
      min_approach_linear_velocity: 0.1
      approach_velocity_scaling_dist: 0.01
      use_collision_detection: false
      max_allowed_time_to_collision_up_to_carrot: 1.0
      use_regulated_linear_velocity_scaling: false
      use_fixed_curvature_lookahead: false
      curvature_lookahead_dist: 0.25
      use_cost_regulated_linear_velocity_scaling: false
      regulated_linear_scaling_min_radius: 0.9
      regulated_linear_scaling_min_speed: 0.05
      use_rotate_to_heading: false
      allow_reversing: false
      rotate_to_heading_min_angle: 0.785
      max_angular_accel: 2.5
      max_robot_pose_search_dist: 10.0
      use_interpolation: true
    # Vector Pursuit
    VectorPursuit:
      plugin: "vector_pursuit_controller::VectorPursuitController"
      k: 5.0
      desired_linear_vel: 0.25
      min_turning_radius: 1.5
      lookahead_dist: 3.0
      min_lookahead_dist: 4.0
      max_lookahead_dist: 6.0
      lookahead_time: 1.0
      rotate_to_heading_angular_vel: 0.2
      transform_tolerance: 0.5
      use_velocity_scaled_lookahead_dist: true
      min_linear_velocity: 0.0
      min_approach_linear_velocity: 0.05
      approach_velocity_scaling_dist: 0.5
      max_allowed_time_to_collision_up_to_target: 1.0
      use_collision_detection: false
      use_cost_regulated_linear_velocity_scaling: true
      cost_scaling_dist: 0.5
      cost_scaling_gain: 1.0
      inflation_cost_scaling_factor: 3.0
      use_rotate_to_heading: false
      allow_reversing: false
      rotate_to_heading_min_angle: 0.5
      max_angular_accel: 1.0
      max_linear_accel: 1.0
      max_lateral_accel: 0.2
      max_robot_pose_search_dist: 10.0
      use_interpolation: true
      use_heading_from_path: false

behavior_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    wait:
      plugin: "nav2_behaviors/Wait"
    assisted_teleop:
      plugin: "nav2_behaviors/AssistedTeleop"
    global_frame: odom
    robot_base_frame: base_footprint
    transform_tolerance: 0.1
    use_sim_time: true
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

map_server:
  ros__parameters:
    use_sim_time: True
    yaml_filename: "map.yaml"

# Local Costmap
local_costmap:
  local_costmap:
    ros__parameters:
      use_sim_time: True
      global_frame: odom
      robot_base_frame: base_footprint
      rolling_window: true
      width: 30
      height: 30
      resolution: 0.05
      footprint: "[ [-0.62, -0.6], [1.4, -0.6], [1.4, 0.6], [-0.62, 0.6] ]"
      plugins: ["obstacle_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.62
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        scan:
          topic: /robot1/scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: False
      always_send_full_costmap: True
      observation_sources: scan

# Global Costmap
global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 30.0
      publish_frequency: 30.0
      global_frame: map
      robot_base_frame: base_footprint
      use_sim_time: True
      footprint: "[ [-0.62, -0.6], [1.4, -0.6], [1.4, 0.6], [-0.62, 0.6] ]"
      resolution: 0.05
      track_unknown_space: true
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: False
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.62
      always_send_full_costmap: True