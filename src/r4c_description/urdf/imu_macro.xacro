<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- The macro can't be called imu, since one tag in the gazebo element is called imu also and
  xacro fails to parse the macro if these two names are the same -->
  <xacro:macro name="i_m_u" params="config_file">

    <xacro:property name="conf_file" value="${config_file}"/>
    <xacro:property name="config"    value="${xacro.load_yaml(conf_file)}"/>

    <xacro:property name="name"   value="${config['name']}"/>
    <xacro:property name="size_x" value="${config['size']['x']}"/>
    <xacro:property name="size_y" value="${config['size']['y']}"/>
    <xacro:property name="size_z" value="${config['size']['z']}"/>
    <xacro:property name="mass"   value="${config['mass']}"/>

    <link name="${config['base_frame']}">
      <inertial>
        <mass value="0.1"/>
        <inertia ixx="0.000001" ixy="0.0" ixz="0.0" iyy="0.000001" iyz="0.0" izz="0.000001"/>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      </inertial>
    </link>

    <joint name="${config['joint_parent_frame_base_frame']['name']}" type="fixed">
      <parent link="${config['parent_frame']}"/>
      <child link="${config['base_frame']}"/>
      <origin rpy="${config['joint_parent_frame_base_frame']['R']}
      ${config['joint_parent_frame_base_frame']['P']}
      ${config['joint_parent_frame_base_frame']['Y']}"
      xyz="${config['joint_parent_frame_base_frame']['x']}
      ${config['joint_parent_frame_base_frame']['y']}
      ${config['joint_parent_frame_base_frame']['z']}"/>
    </joint>

    <link name="${config['body_frame']}">
      <visual>
        <geometry>
          <box size="${size_x} ${size_y} ${size_z}"/>
        </geometry>
        <material name="${config['body_frame']}_color">
            <color rgba="${config['color']['r']} ${config['color']['g']} ${config['color']['b']} ${config['color']['a']}"/>
        </material>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      </visual>
      <collision>
        <geometry>
          <box size="${size_x} ${size_y} ${size_z}"/>
        </geometry>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      </collision>
      <inertial>
        <mass value="${mass}"/>
        <inertia ixx="${(1.0/12.0) * mass * (size_y * size_y + size_z * size_z)}"  ixy="0.0" ixz="0.0"
                 iyy="${(1.0/12.0) * mass * (size_x * size_x + size_z * size_z)}" iyz="0.0"
                 izz="${(1.0/12.0) * mass * (size_x * size_x + size_y * size_y)}" />
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      </inertial>
    </link>

    <joint name="${config['joint_base_frame_body_frame']['name']}" type="fixed">
      <parent link="${config['base_frame']}"/>
      <child link="${config['body_frame']}"/>
      <origin rpy="${config['joint_base_frame_body_frame']['R']}
      ${config['joint_base_frame_body_frame']['P']}
      ${config['joint_base_frame_body_frame']['Y']}"
      xyz="${config['joint_base_frame_body_frame']['x']}
      ${config['joint_base_frame_body_frame']['y']}
      ${config['joint_base_frame_body_frame']['z']}"/>
    </joint>

    <link name="${config['data_frame']}">
      <inertial>
        <mass value="0.1"/>
        <inertia ixx="0.000001" ixy="0.0" ixz="0.0" iyy="0.000001" iyz="0.0" izz="0.000001"/>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      </inertial>
    </link>

    <joint name="${config['joint_body_frame_data_frame']['name']}" type="fixed">
      <parent link="${config['body_frame']}"/>
      <child link="${config['data_frame']}"/>
      <origin rpy="${config['joint_body_frame_data_frame']['R']}
      ${config['joint_body_frame_data_frame']['P']}
      ${config['joint_body_frame_data_frame']['Y']}"
      xyz="${config['joint_body_frame_data_frame']['x']}
      ${config['joint_body_frame_data_frame']['y']}
      ${config['joint_body_frame_data_frame']['z']}"/>
    </joint>

    <xacro:if value="${config['plugin']['enabled'] == 1}">
      <gazebo reference="${config['data_frame']}">
        <sensor type="imu" name="${config['name']}_gzb_sensor">
          <always_on>${config['plugin']['always_on']}</always_on>
          <pose>0.0 0.0 0.0 0.0 0.0 0.0</pose>
          <update_rate>${config['plugin']['update_rate']}</update_rate>
          <visualize>${config['plugin']['visualize']}</visualize>
          <imu>
            <angular_velocity>
              <x>
                <noise type="gaussian">
                  <mean>${config['plugin']['angular_velocity']['gaussian_noise']['x']['mean']}</mean>
                  <stddev>${config['plugin']['angular_velocity']['gaussian_noise']['x']['stddev']}</stddev>
                  <bias_mean>${config['plugin']['angular_velocity']['gaussian_noise']['x']['bias_mean']}</bias_mean>
                  <bias_stddev>${config['plugin']['angular_velocity']['gaussian_noise']['x']['bias_stddev']}</bias_stddev>
                </noise>
              </x>
              <y>
                <noise type="gaussian">
                  <mean>${config['plugin']['angular_velocity']['gaussian_noise']['y']['mean']}</mean>
                  <stddev>${config['plugin']['angular_velocity']['gaussian_noise']['y']['stddev']}</stddev>
                  <bias_mean>${config['plugin']['angular_velocity']['gaussian_noise']['y']['bias_mean']}</bias_mean>
                  <bias_stddev>${config['plugin']['angular_velocity']['gaussian_noise']['y']['bias_stddev']}</bias_stddev>
                </noise>
              </y>
              <z>
                <noise type="gaussian">
                  <mean>${config['plugin']['angular_velocity']['gaussian_noise']['z']['mean']}</mean>
                  <stddev>${config['plugin']['angular_velocity']['gaussian_noise']['z']['stddev']}</stddev>
                  <bias_mean>${config['plugin']['angular_velocity']['gaussian_noise']['z']['bias_mean']}</bias_mean>
                  <bias_stddev>${config['plugin']['angular_velocity']['gaussian_noise']['z']['bias_stddev']}</bias_stddev>
                </noise>
              </z>
            </angular_velocity>
            <linear_acceleration>
              <x>
                <noise type="gaussian">
                  <mean>${config['plugin']['linear_acceleration']['gaussian_noise']['x']['mean']}</mean>
                  <stddev>${config['plugin']['linear_acceleration']['gaussian_noise']['x']['stddev']}</stddev>
                  <bias_mean>${config['plugin']['linear_acceleration']['gaussian_noise']['x']['bias_mean']}</bias_mean>
                  <bias_stddev>${config['plugin']['linear_acceleration']['gaussian_noise']['x']['bias_stddev']}</bias_stddev>
                </noise>
              </x>
              <y>
                <noise type="gaussian">
                  <mean>${config['plugin']['linear_acceleration']['gaussian_noise']['y']['mean']}</mean>
                  <stddev>${config['plugin']['linear_acceleration']['gaussian_noise']['y']['stddev']}</stddev>
                  <bias_mean>${config['plugin']['linear_acceleration']['gaussian_noise']['y']['bias_mean']}</bias_mean>
                  <bias_stddev>${config['plugin']['linear_acceleration']['gaussian_noise']['y']['bias_stddev']}</bias_stddev>
                </noise>
              </y>
              <z>
                <noise type="gaussian">
                  <mean>${config['plugin']['linear_acceleration']['gaussian_noise']['z']['mean']}</mean>
                  <stddev>${config['plugin']['linear_acceleration']['gaussian_noise']['z']['stddev']}</stddev>
                  <bias_mean>${config['plugin']['linear_acceleration']['gaussian_noise']['z']['bias_mean']}</bias_mean>
                  <bias_stddev>${config['plugin']['linear_acceleration']['gaussian_noise']['z']['bias_stddev']}</bias_stddev>
                </noise>
              </z>
            </linear_acceleration>
          </imu>
          <plugin filename="libgazebo_ros_imu_sensor.so" name="${config['name']}_gzb_ros_imu_sensor_plugin">
            <ros>
              <!-- <namespace>${config['plugins']['ns']}</namespace> -->
              <remapping>~/out:=${config['plugin']['topic']}</remapping>
            </ros>
            <initial_orientation_as_reference>${config['plugin']['initial_orientation_as_reference']}</initial_orientation_as_reference>
          </plugin>
        </sensor>
      </gazebo>
    </xacro:if>
  </xacro:macro>

</robot>