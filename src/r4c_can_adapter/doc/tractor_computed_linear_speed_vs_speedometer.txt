Ideally, the linear velocity in the speed field of the GBSD CAN message should closely match the
velocity shown on the tractor's speedometer.

However, these two values do not appear to be close enough for the tractor. Therefore, we can take
simultaneous samples of the speedometer's velocity and the velocity in the GBSD command
(calculated from the linear velocities of the tractor's left and right rear wheels). Then, we can
fit all pairs of values using least squares to create a linear function.

From that point onward, for each subsequent calculation, we first obtain the tractor’s linear
velocity as before, from the left and right rear wheels, and then apply this value to the
linear function to get a final linear velocity for the platform that more closely matches the
speedometer's reading.

Python code to compute slope_gbsd and intecept_gbsd so,

estimated_speedometer_vel = slope_gbsd * gbsd.speed + intercept_gbsd

# ------------------------------------------------------------------------------
import numpy as np
from scipy.stats import linregress

# Data provided by the user, terminal as x and velocímetro as y
x_gbsd_speed = np.array([2.4, 2.8, 3.2, 3.7, 4.1, 4.5, 4.9, 5.5, 5.75, 6.3, 6.6])
y_speedometer = np.array([3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8])

# Perform linear regression (least squares)
slope, intercept, _, _, _ = linregress(x_gbsd_speed, y_speedometer)

slope, intercept
# ------------------------------------------------------------------------------

On 19-11-2024, in Serrater, the following values were sampled:

speedometer  gbsd_msg.speed
3               2.4
3.5             2.8
4               3.2
4.5             3.7
5               4.1
5.5             4.5
6               4.9
6.5             5.5
7               5.75
7.5             6.3
8               6.6

Taking into account the previous data:
slope_gbsd     = 1.16709888375239600
intercept_gbsd = 0.22153004848348257